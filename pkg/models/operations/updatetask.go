// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"ContractifyProduction/pkg/models/shared"
	"net/http"
)

type UpdateTaskRequest struct {
	TaskUpdate *shared.TaskUpdate `request:"mediaType=application/json"`
	// Id of the company
	Company int64 `pathParam:"style=simple,explode=false,name=company"`
	// Id of the task
	Task int64 `pathParam:"style=simple,explode=false,name=task"`
}

func (o *UpdateTaskRequest) GetTaskUpdate() *shared.TaskUpdate {
	if o == nil {
		return nil
	}
	return o.TaskUpdate
}

func (o *UpdateTaskRequest) GetCompany() int64 {
	if o == nil {
		return 0
	}
	return o.Company
}

func (o *UpdateTaskRequest) GetTask() int64 {
	if o == nil {
		return 0
	}
	return o.Task
}

// UpdateTaskResponseBody - OK
type UpdateTaskResponseBody struct {
	Data *shared.TaskRead `json:"data,omitempty"`
}

func (o *UpdateTaskResponseBody) GetData() *shared.TaskRead {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateTaskResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Object *UpdateTaskResponseBody
}

func (o *UpdateTaskResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTaskResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTaskResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateTaskResponse) GetObject() *UpdateTaskResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
