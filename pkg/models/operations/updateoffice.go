// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"ContractifyProduction/pkg/models/shared"
	"net/http"
)

type UpdateOfficeRequest struct {
	OfficeWrite *shared.OfficeWrite `request:"mediaType=application/json"`
	// Id of the company
	Company int64 `pathParam:"style=simple,explode=false,name=company"`
	// Id of the office
	Office int64 `pathParam:"style=simple,explode=false,name=office"`
}

func (o *UpdateOfficeRequest) GetOfficeWrite() *shared.OfficeWrite {
	if o == nil {
		return nil
	}
	return o.OfficeWrite
}

func (o *UpdateOfficeRequest) GetCompany() int64 {
	if o == nil {
		return 0
	}
	return o.Company
}

func (o *UpdateOfficeRequest) GetOffice() int64 {
	if o == nil {
		return 0
	}
	return o.Office
}

// UpdateOfficeResponseBody - OK
type UpdateOfficeResponseBody struct {
	Data *shared.OfficeRead `json:"data,omitempty"`
}

func (o *UpdateOfficeResponseBody) GetData() *shared.OfficeRead {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateOfficeResponse struct {
	// OK
	TwoHundredApplicationJSONObject *UpdateOfficeResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateOfficeResponse) GetTwoHundredApplicationJSONObject() *UpdateOfficeResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *UpdateOfficeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateOfficeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateOfficeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
