// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type DeleteDocumentErrors struct {
	Errors []string `json:"errors,omitempty"`
	Field  *string  `json:"field,omitempty"`
}

func (o *DeleteDocumentErrors) GetErrors() []string {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *DeleteDocumentErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

// DeleteDocumentDocumentsResponse422ResponseBody - Invalid data posted
type DeleteDocumentDocumentsResponse422ResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response         `json:"-"`
	Errors      []DeleteDocumentErrors `json:"errors,omitempty"`
	Message     *string                `json:"message,omitempty"`
}

var _ error = &DeleteDocumentDocumentsResponse422ResponseBody{}

func (e *DeleteDocumentDocumentsResponse422ResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteDocumentDocumentsResponseResponseBody - Not Found
type DeleteDocumentDocumentsResponseResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &DeleteDocumentDocumentsResponseResponseBody{}

func (e *DeleteDocumentDocumentsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteDocumentDocumentsResponseBody - Forbidden
type DeleteDocumentDocumentsResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &DeleteDocumentDocumentsResponseBody{}

func (e *DeleteDocumentDocumentsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteDocumentResponseBody - Unauthenticated
type DeleteDocumentResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &DeleteDocumentResponseBody{}

func (e *DeleteDocumentResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
