// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type UpdateTaskErrors struct {
	Errors []string `json:"errors,omitempty"`
	Field  *string  `json:"field,omitempty"`
}

func (o *UpdateTaskErrors) GetErrors() []string {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *UpdateTaskErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

// UpdateTaskTasksResponse422ResponseBody - Invalid data posted
type UpdateTaskTasksResponse422ResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response     `json:"-"`
	Errors      []UpdateTaskErrors `json:"errors,omitempty"`
	Message     *string            `json:"message,omitempty"`
}

var _ error = &UpdateTaskTasksResponse422ResponseBody{}

func (e *UpdateTaskTasksResponse422ResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateTaskTasksResponseResponseBody - Not Found
type UpdateTaskTasksResponseResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateTaskTasksResponseResponseBody{}

func (e *UpdateTaskTasksResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateTaskTasksResponseBody - Forbidden
type UpdateTaskTasksResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateTaskTasksResponseBody{}

func (e *UpdateTaskTasksResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateTaskResponseBody - Unauthenticated
type UpdateTaskResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateTaskResponseBody{}

func (e *UpdateTaskResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
