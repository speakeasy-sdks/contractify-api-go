// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type CreateRelationErrors struct {
	Errors []string `json:"errors,omitempty"`
	Field  *string  `json:"field,omitempty"`
}

func (o *CreateRelationErrors) GetErrors() []string {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *CreateRelationErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

// CreateRelationRelationsResponseResponseBody - Invalid data posted
type CreateRelationRelationsResponseResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response         `json:"-"`
	Errors      []CreateRelationErrors `json:"errors,omitempty"`
	Message     *string                `json:"message,omitempty"`
}

var _ error = &CreateRelationRelationsResponseResponseBody{}

func (e *CreateRelationRelationsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateRelationRelationsResponseBody - Forbidden
type CreateRelationRelationsResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &CreateRelationRelationsResponseBody{}

func (e *CreateRelationRelationsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateRelationResponseBody - Unauthenticated
type CreateRelationResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &CreateRelationResponseBody{}

func (e *CreateRelationResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
