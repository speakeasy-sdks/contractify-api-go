// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type UpdateRelationErrors struct {
	Errors []string `json:"errors,omitempty"`
	Field  *string  `json:"field,omitempty"`
}

func (o *UpdateRelationErrors) GetErrors() []string {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *UpdateRelationErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

// UpdateRelationRelationsResponse422ResponseBody - Invalid data posted
type UpdateRelationRelationsResponse422ResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response         `json:"-"`
	Errors      []UpdateRelationErrors `json:"errors,omitempty"`
	Message     *string                `json:"message,omitempty"`
}

var _ error = &UpdateRelationRelationsResponse422ResponseBody{}

func (e *UpdateRelationRelationsResponse422ResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateRelationRelationsResponseResponseBody - Not Found
type UpdateRelationRelationsResponseResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateRelationRelationsResponseResponseBody{}

func (e *UpdateRelationRelationsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateRelationRelationsResponseBody - Forbidden
type UpdateRelationRelationsResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateRelationRelationsResponseBody{}

func (e *UpdateRelationRelationsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateRelationResponseBody - Unauthenticated
type UpdateRelationResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateRelationResponseBody{}

func (e *UpdateRelationResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
