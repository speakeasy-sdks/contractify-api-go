// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type UpdateOfficeErrors struct {
	Errors []string `json:"errors,omitempty"`
	Field  *string  `json:"field,omitempty"`
}

func (o *UpdateOfficeErrors) GetErrors() []string {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *UpdateOfficeErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

// UpdateOfficeOfficesResponse422ResponseBody - Invalid data posted
type UpdateOfficeOfficesResponse422ResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response       `json:"-"`
	Errors      []UpdateOfficeErrors `json:"errors,omitempty"`
	Message     *string              `json:"message,omitempty"`
}

var _ error = &UpdateOfficeOfficesResponse422ResponseBody{}

func (e *UpdateOfficeOfficesResponse422ResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateOfficeOfficesResponseResponseBody - Not Found
type UpdateOfficeOfficesResponseResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateOfficeOfficesResponseResponseBody{}

func (e *UpdateOfficeOfficesResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateOfficeOfficesResponseBody - Forbidden
type UpdateOfficeOfficesResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateOfficeOfficesResponseBody{}

func (e *UpdateOfficeOfficesResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateOfficeResponseBody - Unauthenticated
type UpdateOfficeResponseBody struct {
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
	Message     *string        `json:"message,omitempty"`
}

var _ error = &UpdateOfficeResponseBody{}

func (e *UpdateOfficeResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
